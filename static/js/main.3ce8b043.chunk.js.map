{"version":3,"sources":["components/Card.js","components/ClassCards.js","components/Expansion.js","hooks/useFetchAllExpansions.js","components/ExpansionList.js","hooks/useFetchSearch.js","components/SearchList.js","components/SearchPage.js","App.js","index.js"],"names":["Card","card","cardVisibility","sequence","useState","descriptionVisibility","setDescriptionVisibility","gold","setGold","tabIndex","className","playerClass","replace","style","animationDelay","name","src","imgGold","img","alt","onClick","artist","flavor","ClassCards","cards","classVisibility","setCardVisibility","classCards","filter","length","map","index","cardId","Expansion","expansion","setClassVisibility","uuid","convertToArray","data","Object","keys","expansionName","filterByExpansion","invalidExpansions","includes","filterByCard","invalidCardTypes","invalidCardNames","type","useFetchAllExpansions","setData","getData","url","a","fetch","method","headers","process","response","json","array","filteredArray","filteredTwiceArray","console","log","useEffect","ExpansionList","id","useFetchSearch","search","searchResponse","setSearchResponse","getSearch","ok","slice","SearchList","SearchPage","setSearch","onChange","e","target","value","placeholder","App","to","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ce8b043.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Card({card, cardVisibility, sequence}) {\n    const [descriptionVisibility, setDescriptionVisibility] = useState(false);\n    const [gold, setGold] = useState(false)\n    return cardVisibility ? (\n        <li tabIndex=\"2\"\n            className={`card ${card.playerClass.replace(\" \", \"-\")}`} \n            style={{ animationDelay: `${sequence * 25}ms`}}\n        >\n            <h3 className=\"card-name\">\n                {card.name}\n            </h3>\n            {descriptionVisibility ? \n                <div className=\"card-description\">\n                    <div className=\"card-image\">\n                        <img src={gold ? card.imgGold : card.img} alt=\"card pic\" />\n                        <button className=\"description-btn\"\n                            onClick={() => setGold(!gold)}\n                        >{gold ? \"Gold\" : \"Normal\"}</button>\n                    </div>\n                    <p className=\"card-artist\">\n                        {card.artist || \"This card has no registered artist\"}\n                    </p>\n                    <p className=\"card-flavor\">\n                        {card.flavor || \"This card has no flavor text\"}\n                    </p>    \n                </div> : null}\n            <button className=\"description-btn\"\n                onClick={() => setDescriptionVisibility(!descriptionVisibility)}\n            >\n               {descriptionVisibility ? \"Hide\" : \"Reveal\"}\n            </button>\n        </li>\n    ) \n    :\n    null;\n}\n","import React, { useState } from 'react'\nimport Card from \"./Card\"\n\nexport default function ClassCards({playerClass, cards, classVisibility, sequence}) {\n    const [cardVisibility, setCardVisibility] = useState(false);\n\n    const classCards = cards.filter(card => card.playerClass === playerClass);\n\n    return classCards.length === 0 ? null : classVisibility ? (\n        <li className=\"class-cards\"\n            style={{animationDelay: `${sequence * 1000}ms`}}\n        >\n            <h2 tabIndex=\"1\"\n                className=\"player-class-header\"\n                onClick={() => setCardVisibility(!cardVisibility)}\n            >{playerClass}: <span>{classCards.length} Cards</span></h2>\n            <ul className=\"card-list\">\n                {classCards.map((card, index) => \n                    <Card \n                        card={card} \n                        cardVisibility={cardVisibility} \n                        sequence={index}\n                        key={card.cardId} \n                    />\n                )}\n            </ul>\n        </li>\n    ) \n    :\n    null;\n} \n","import React, {useState} from 'react';\nimport ClassCards from \"./ClassCards\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default function Expansion({expansion, sequence}) {\n    const [classVisibility, setClassVisibility] = useState(false)\n    \n    const cardClasses = [\n        \"Neutral\", \"Rogue\", \"Warrior\",\n        \"Hunter\", \"Mage\", \"Paladin\", \"Shaman\",\n        \"Priest\", \"Druid\", \"Warlock\", \"Demon Hunter\"\n    ];\n    return (\n        <li className=\"expansion\"\n            style={{\n                animationDelay: `${sequence * 200}ms`,\n            }}>\n            <h2 className=\"expansion-header\"\n                tabIndex=\"0\"\n                onClick={() => setClassVisibility(!classVisibility)}>\n                {expansion.name}\n            </h2>\n            <ul className=\"class-list\">\n                {cardClasses.map((playerClass, index) => \n                    <ClassCards \n                        playerClass={playerClass} \n                        cards={expansion.cards} \n                        classVisibility={classVisibility}\n                        sequence={index}\n                        key={uuid()}\n                    />\n                )}\n            </ul>\n        </li>\n    )\n}\n","\nimport { useState, useEffect } from \"react\";\n\nfunction useFetchAllExpansions() {\n    const url = \"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards\"\n    const [data, setData] = useState();\n    const getData = async (url) => {\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                },\n            });\n            const json = await response.json();\n            const array = convertToArray(json);\n            const filteredArray = filterByExpansion(array);\n            const filteredTwiceArray = filterByCard(filteredArray);\n            setData(filteredTwiceArray);\n        } catch (err) {\n            console.log(err);   \n        }\n    }\n    useEffect(() => {\n      getData(url)\n    }, [])\n\n    return data;\n}\nconst convertToArray = data => {\n    return Object.keys(data).map(expansionName => {\n        return {\n            name: expansionName,\n            cards: data[expansionName],\n        }\n    })\n}\nconst filterByExpansion = data => {\n    const expansionMinimum = 50;\n    const invalidExpansions = [\n        \"Hero Skins\",\n        \"Credits\",\n        \"Tavern Brawl\",\n        \"Battlegrounds\",\n    ];\n    // return expnsions thata re long enough and not invalid\n    return data.filter(expansion => {\n        if (expansion.cards.length < expansionMinimum) return false;\n        if (invalidExpansions.includes(expansion.name)) return false;\n        return true\n    })\n}\nconst filterByCard = data => {\n    const invalidCardTypes = [\"Hero Power\", \"Hero\", \"Enchantment\"];\n    const invalidCardNames = [\"FX\", \"Cost\", \"NOOOOOOOOOOOO\", \"AFK\", \"Coin's Vengeance\", \"Anomaly\"];\n\n    return data.map(expansion => {\n        return {\n            ...expansion,\n            cards: expansion.cards.filter((card, index) => {\n                if (invalidCardNames.includes(card.name)) return false;\n                if (invalidCardTypes.includes(card.type)) return false;\n                if (expansion.cards[index + 1]) {\n                    const nextCard = expansion.cards[index + 1]\n                    if (nextCard.name === card.name) return false;\n                }\n                return true;\n            })\n        }\n    })\n}\n// const addId = data => {\n//     const addedId = data.map(expansion => {\n//         return {\n//             ...expansion,\n//             cards: expansion.cards.map(card => {\n//                 return {\n//                     ...card, \n//                     id: uuid() \n//                 }\n//             })\n//         }\n        \n//     })\n//     return addedId;\n// }\n\nexport default useFetchAllExpansions;","import React from 'react';\nimport Expansion from \"./Expansion\";\nimport useFetchAllExpansions from \"../hooks/useFetchAllExpansions\";\n\nexport default function ExpansionList() {\n    const data = useFetchAllExpansions();\n    return (\n        <main id=\"expansion-list\">\n            <h1>Hearthstone Cards</h1>\n            {data ?  \n            <ul>\n                {data.map((expansion, index) => \n                    <Expansion \n                    expansion={expansion} \n                    sequence={index}\n                    key={index} />\n                )}\n            </ul> \n            :\n            <aside className=\"loader\">\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n            </aside>}\n        </main>         \n    )\n}\n","import {useState, useEffect} from \"react\";\n\nfunction useFetchSearch(search) {\n    const [searchResponse, setSearchResponse] = useState([])\n    const getSearch = async (search) => {\n        try {\n            if (search.length === 0) return;\n            const response = await fetch(`https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/search/${search}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\"\n                }\n            })\n\n            if (!response.ok) return searchResponse;\n            const data = await response.json();\n            if (data.length > 9) {\n                setSearchResponse(data.slice(0, 10));\n                console.log(data.slice(0, 10));\n                return;\n            }\n            setSearchResponse(data);\n            console.log(data);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        getSearch(search)\n    }, [search])\n    return searchResponse;\n}\nexport default useFetchSearch;","import React from 'react';\nimport Card from \"./Card\";\n\nexport default function SearchList({cards}) {\n    return (\n        <div className=\"search-list\">\n            {cards.map((card, index) => {\n                return <Card card={card} cardVisibility={true} key={index} />\n            })}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport useFetchSearch from \"../hooks/useFetchSearch\";\nimport SearchList from \"../components/SearchList\";\n\nexport default function SearchPage() {\n    // our search query\n    const [search, setSearch] = useState(\"\");\n    // our custom hook that returns our response\n    const searchResponse = useFetchSearch(search);\n    return (\n        <div id=\"search-page\">\n            <form>\n                <label>Search For Cards:</label>\n                <input\n                    type=\"text\"\n                    onChange={e => setSearch(e.target.value)}\n                    placeholder=\"search\"\n                    ></input>\n            </form>\n            <SearchList cards={searchResponse} />\n        </div>\n    )\n}\n","import React from \"react\";\nimport ExpansionList from \"./components/ExpansionList\";\nimport SearchPage from \"./components/SearchPage\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport \"./style/style.css\";\n\nfunction App() {\n  \n  return (\n    <Router>\n      <header>\n        <nav>\n          <Link to=\"/\">\n            All Expansions\n          </Link>\n          <Link to=\"/search-card\">\n            Search Page\n          </Link>\n        </nav>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={ExpansionList}/>\n        <Route path=\"/search-card\" component={SearchPage}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}