{"version":3,"sources":["components/Card.js","components/ClassCards.js","components/Expansion.js","components/ExpansionList.js","hooks/useFetchSearch.js","components/SearchList.js","components/SearchPage.js","components/ArtistPage.js","hooks/useFetchAllExpansions.js","App.js","index.js"],"names":["Card","card","cardVisibility","sequence","setArtist","useState","descriptionVisibility","setDescriptionVisibility","gold","setGold","tabIndex","className","playerClass","replace","style","animationDelay","name","src","imgGold","img","alt","onClick","artist","to","flavor","ClassCards","cards","classVisibility","setCardVisibility","classCards","filter","length","map","index","cardId","Expansion","expansion","setClassVisibility","uuid","ExpansionList","data","id","useFetchSearch","search","searchResponse","setSearchResponse","getSearch","a","fetch","process","response","ok","json","slice","console","log","useEffect","SearchList","SearchPage","setSearch","type","onChange","e","target","value","placeholder","ArtistPage","pictures","setPictures","reduce","allPics","artistCards","pic","convertToArray","Object","keys","expansionName","filterByExpansion","invalidExpansions","includes","filterByCard","invalidCardTypes","invalidCardNames","useFetchAllExpansions","setData","getData","url","method","headers","array","filteredArray","filteredTwiceArray","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46afab23.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default function Card({card, cardVisibility, sequence, setArtist}) {\n    const [descriptionVisibility, setDescriptionVisibility] = useState(false);\n    const [gold, setGold] = useState(false)\n    return cardVisibility ? (\n        <li tabIndex=\"2\"\n            className={`card ${card.playerClass.replace(\" \", \"-\")}`} \n            style={{ animationDelay: `${sequence * 25}ms`}}\n        >\n            <h3 className=\"card-name\">\n                {card.name}\n            </h3>\n            {descriptionVisibility ? \n                <div className=\"card-description\">\n                    <div className=\"card-image\">\n                        <img src={gold ? card.imgGold : card.img} alt=\"card pic\" />\n                        <button className=\"description-btn\"\n                            onClick={() => setGold(!gold)}\n                        >{gold ? \"Gold\" : \"Normal\"}</button>\n                    </div>\n                        {card.artist ? <p className=\"card-artist\" \n                        onClick={() => setArtist()}>\n                        <Link to=\"/artist-list\">\n                            {card.artist}\n                        </Link>\n                        </p> : null}\n                    <p className=\"card-flavor\">\n                        {card.flavor || \"This card has no flavor text\"}\n                    </p>    \n                </div> : null}\n            <button className=\"description-btn\"\n                onClick={() => setDescriptionVisibility(!descriptionVisibility)}\n            >\n               {descriptionVisibility ? \"Hide\" : \"Reveal\"}\n            </button>\n        </li>\n    ) \n    :\n    null;\n}\n","import React, { useState } from 'react'\nimport Card from \"./Card\"\n\nexport default function ClassCards({playerClass, cards, classVisibility, sequence, setArtist}) {\n    const [cardVisibility, setCardVisibility] = useState(false);\n\n    const classCards = cards.filter(card => card.playerClass === playerClass);\n\n    return classCards.length === 0 ? null : classVisibility ? (\n        <li className=\"class-cards\"\n            style={{animationDelay: `${sequence * 1000}ms`}}\n        >\n            <h2 tabIndex=\"1\"\n                className=\"player-class-header\"\n                onClick={() => setCardVisibility(!cardVisibility)}\n            >{playerClass}: <span>{classCards.length} Cards</span></h2>\n            <ul className=\"card-list\">\n                {classCards.map((card, index) => \n                    <Card \n                        card={card} \n                        cardVisibility={cardVisibility} \n                        sequence={index}\n                        setArtist={() => setArtist(card.artist)}\n                        key={card.cardId} \n                    />\n                )}\n            </ul>\n        </li>\n    ) \n    :\n    null;\n} \n","import React, {useState} from 'react';\nimport ClassCards from \"./ClassCards\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default function Expansion({expansion, sequence, setArtist}) {\n    const [classVisibility, setClassVisibility] = useState(false)\n    \n    const cardClasses = [\n        \"Neutral\", \"Rogue\", \"Warrior\",\n        \"Hunter\", \"Mage\", \"Paladin\", \"Shaman\",\n        \"Priest\", \"Druid\", \"Warlock\", \"Demon Hunter\"\n    ];\n    return (\n        <li className=\"expansion\"\n            style={{\n                animationDelay: `${sequence * 200}ms`,\n            }}>\n            <h2 className=\"expansion-header\"\n                tabIndex=\"0\"\n                onClick={() => setClassVisibility(!classVisibility)}>\n                {expansion.name}\n            </h2>\n            <ul className=\"class-list\">\n                {cardClasses.map((playerClass, index) => \n                    <ClassCards \n                        playerClass={playerClass} \n                        cards={expansion.cards} \n                        classVisibility={classVisibility}\n                        sequence={index}\n                        setArtist={setArtist}\n                        key={uuid()}\n                    />\n                )}\n            </ul>\n        </li>\n    )\n}\n","import React from 'react';\nimport Expansion from \"./Expansion\";\n\nexport default function ExpansionList({data, setArtist}) {\n    return (\n        <main id=\"expansion-list\" className=\"page\">\n            <h1>Hearthstone Cards</h1>\n            {data ?  \n            <ul>\n                {data.map((expansion, index) => \n                    <Expansion \n                    setArtist={setArtist}\n                    expansion={expansion} \n                    sequence={index}\n                    key={index} />\n                )}\n            </ul> \n            :\n            <aside className=\"loader\">\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n            </aside>}\n        </main>         \n    )\n}\n","import {useState, useEffect} from \"react\";\n\nfunction useFetchSearch(search) {\n    const [searchResponse, setSearchResponse] = useState([])\n    const getSearch = async (search) => {\n        try {\n            if (search.length === 0) return;\n            const response = await fetch(`https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/search/${search}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\"\n                }\n            })\n\n            if (!response.ok) return searchResponse;\n            const data = await response.json();\n            if (data.length > 9) {\n                setSearchResponse(data.slice(0, 10));\n                return;\n            }\n            setSearchResponse(data);\n            console.log(data);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        getSearch(search)\n    }, [search])\n    return searchResponse;\n}\nexport default useFetchSearch;","import React from 'react';\nimport Card from \"./Card\";\n\nexport default function SearchList({cards}) {\n    return (\n        <div className=\"search-list\">\n            {cards.map((card, index) => {\n                return <Card card={card} cardVisibility={true} key={index} />\n            })}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport useFetchSearch from \"../hooks/useFetchSearch\";\nimport SearchList from \"../components/SearchList\";\n\nexport default function SearchPage() {\n    // our search query\n    const [search, setSearch] = useState(\"\");\n    // our custom hook that returns our response\n    const searchResponse = useFetchSearch(search);\n    return (\n        <div id=\"search-page\" className=\"page\">\n            <form>\n                <label>Search For Cards:</label>\n                <input\n                    type=\"text\"\n                    onChange={e => setSearch(e.target.value)}\n                    placeholder=\"search\"\n                    ></input>\n            </form>\n            <SearchList cards={searchResponse} />\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport default function ArtistPage({artist, data}) {\n    const [pictures, setPictures] = useState([])\n    useEffect(() => {\n        setPictures(data?.reduce((allPics, expansion) => {\n            const artistCards = expansion.cards.filter(card => card.artist === artist)\n            return [...allPics, ...artistCards.map(card => card.img)];\n        }, []))\n    }, [artist])\n    return (\n        <div className=\"page\">\n            {/* <select\n                onChange={e => setArtist(e.target.value)}>\n                {allArtists?.map(a => <option value={a}>{a}</option>)}\n            </select> */}\n            <Link to=\"\">Back</Link>\n           <h2>All pictures by {artist}: </h2> \n           <ul className=\"artist-list\">\n                {pictures?.map(pic => \n                    <li>\n                        <img src={pic} alt=\"pic\" />\n                    </li>\n                )}\n           </ul>\n        </div>\n    )\n}\n","\nimport { useState, useEffect } from \"react\";\n\nfunction useFetchAllExpansions() {\n    const url = \"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards\"\n    const [data, setData] = useState();\n    const getData = async (url) => {\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                },\n            });\n            const json = await response.json();\n            const array = convertToArray(json);\n            const filteredArray = filterByExpansion(array);\n            const filteredTwiceArray = filterByCard(filteredArray);\n            setData(filteredTwiceArray);\n        } catch (err) {\n            console.log(err);   \n        }\n    }\n    useEffect(() => {\n      getData(url)\n    }, [])\n\n    return data;\n}\nconst convertToArray = data => {\n    return Object.keys(data).map(expansionName => {\n        return {\n            name: expansionName,\n            cards: data[expansionName],\n        }\n    })\n}\nconst filterByExpansion = data => {\n    const expansionMinimum = 50;\n    const invalidExpansions = [\n        \"Hero Skins\",\n        \"Credits\",\n        \"Tavern Brawl\",\n        \"Battlegrounds\",\n    ];\n    // return expnsions thata re long enough and not invalid\n    return data.filter(expansion => {\n        if (expansion.cards.length < expansionMinimum) return false;\n        if (invalidExpansions.includes(expansion.name)) return false;\n        return true\n    })\n}\nconst filterByCard = data => {\n    const invalidCardTypes = [\"Hero Power\", \"Hero\", \"Enchantment\"];\n    const invalidCardNames = [\"FX\", \"Cost\", \"NOOOOOOOOOOOO\", \"AFK\", \"Coin's Vengeance\", \"Anomaly\"];\n\n    return data.map(expansion => {\n        return {\n            ...expansion,\n            cards: expansion.cards.filter((card, index) => {\n                if (invalidCardNames.includes(card.name)) return false;\n                if (invalidCardTypes.includes(card.type)) return false;\n                if (expansion.cards[index + 1]) {\n                    const nextCard = expansion.cards[index + 1]\n                    if (nextCard.name === card.name) return false;\n                }\n                return true;\n            })\n        }\n    })\n}\n// const addId = data => {\n//     const addedId = data.map(expansion => {\n//         return {\n//             ...expansion,\n//             cards: expansion.cards.map(card => {\n//                 return {\n//                     ...card, \n//                     id: uuid() \n//                 }\n//             })\n//         }\n        \n//     })\n//     return addedId;\n// }\n\nexport default useFetchAllExpansions;","import ExpansionList from \"./components/ExpansionList\";\nimport SearchPage from \"./components/SearchPage\";\nimport ArtistPage from \"./components/ArtistPage\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nimport useFetchAllExpansions from \"./hooks/useFetchAllExpansions\";\n\nimport \"./style/style.css\";\n\nfunction App() {\n  const data = useFetchAllExpansions();\n  const [artist, setArtist] = useState(\"\")\n  // const [allArtists, setAllArtists] = useState([])\n  // useEffect(() => {\n  //   setAllArtists(data?.reduce((totalArtists, expansion) => {\n  //     const expansionArtists = expansion.cards.map(card => {\n  //       if (totalArtists.includes(card.artist)) return card.artist;\n  //       return;\n  //     })\n  //     return [...totalArtists, ...expansionArtists ];\n  //   }, []))\n  // }, [data]) \n\n  return (\n    <Router>\n      <header>\n        <nav>\n          <Link to=\"/\">\n            All Expansions\n          </Link>\n          <Link to=\"/search-card\">\n            Search Page\n          </Link>\n          {/* <Link to=\"/artist-list\">\n            Artist Page\n          </Link> */}\n        </nav>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={() => \n          <ExpansionList \n            data={data} \n            setArtist={setArtist} \n          />}\n        />\n        <Route path=\"/search-card\" component={SearchPage}/>\n        <Route path=\"/artist-list\" component={() => \n          <ArtistPage \n            artist={artist} \n            data={data} \n          />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}