{"version":3,"sources":["hooks/useCardDescription.js","components/CardDescription.js","components/Card.js","components/ClassCards.js","components/Expansion.js","hooks/useFetch.js","components/ExpansionList.js","App.js","index.js"],"names":["useCardDescription","card","img","className","src","artist","flavor","CardDescription","cardVisibility","descriptionVisibility","properties","style","display","map","property","Card","useState","setDescriptionVisibility","onClick","tabIndex","playerClass","replace","name","ClassCards","cards","classVisibility","setCardVisibility","classCards","filter","length","index","Expansion","expansion","setClassVisibility","convertToArray","data","Object","keys","expansionName","filterByExpansion","invalidExpansions","includes","filterByCard","invalidCardTypes","invalidCardNames","type","useFetch","url","setData","isDone","setIsDone","getData","a","fetch","method","headers","process","response","json","array","filteredArray","filteredTwiceArray","console","log","useEffect","ExpansionList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64db9b13.chunk.js","sourcesContent":["\nfunction useCardDescription(card) {\n    // const renderHealth = () => {\n    //     if (card.health) {\n    //         return <div className=\"card-property\">Health: {card.health}</div>\n    //     }\n    // } \n    // const renderAttack = () => {\n    //     if (card.attack) {\n    //         return <div className=\"card-property\">Attack: {card.attack}</div>\n    //     }\n    // }  \n    // const renderCost = () => {\n    //     if (card.cost) {\n    //         return <div className=\"card-property\">Cost: {card.cost}</div>\n    //     }\n    // }   \n    // const renderText = () => {\n    //     if (card.text) {\n    //         return <div className=\"card-property\">Text: {card.text}</div>\n    //     }\n    // }   \n    // const renderType = () => {\n    //     if (card.type) {\n    //         return <div className=\"card-property\">Type: {card.type}</div>\n    //     }\n    // }   \n    // const renderRace = () => {\n    //     if (card.race) {\n    //         return <div className=\"card-property\">Race: {card.race}</div>\n    //     }\n    // }   \n    // const renderRarity = () => {\n    //     if (card.rarity) {\n    //         return <div className=\"card-property\">Rarity: {card.rarity}</div>\n    //     }\n    // }   \n    const renderArtist= () => {\n        if (card.artist) {\n            return  <div className=\"card-artist\">Artist: {card.artist}</div>\n        }\n    }   \n    const renderFlavor = () => {\n        if (card.flavor) {\n            return <div className=\"card-flavor\">Flavor: {card.flavor}</div>\n        }\n    }   \n    const renderImage = () => {\n        if (card.img) {\n            return <div className=\"card-image\">\n                        <img src={card.img} />\n                    </div>\n        }\n    }   \n    return [renderImage, renderArtist, renderFlavor]\n}\nexport default useCardDescription;","import React from 'react'\nimport useCardDescription from \"../hooks/useCardDescription\";\n\nexport default function CardDescription({card, cardVisibility, descriptionVisibility}) {\n    const properties = useCardDescription(card)\n    return (\n        <div \n            style={{\n                display: cardVisibility ? \"flex\" : \"none\",\n                display: descriptionVisibility ? \"flex\" : \"none\",\n            }}\n            className=\"card-description\"\n        >\n            {properties.map(property => {\n                return property();\n            })}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport CardDescription from \"./CardDescription\";\n\nexport default function Card({card, cardVisibility}) {\n    const [descriptionVisibility, setDescriptionVisibility] = useState(cardVisibility);\n    return (\n        <li \n            onClick={() => setDescriptionVisibility(!descriptionVisibility)}\n            tabIndex=\"2\"\n            className={`card ${card.playerClass.replace(\" \", \"-\")}`} \n            style={{\n                display: cardVisibility ? \"flex\" : \"none\",\n            }}\n        >\n            <h3 \n                className=\"card-name\"\n            >\n                {card.name}\n            </h3>\n            <CardDescription \n                card={card} \n                cardVisibility={cardVisibility} \n                descriptionVisibility={descriptionVisibility}\n            />\n        </li>\n    )\n}\n","import React, { useState } from 'react'\nimport Card from \"./Card\"\n\nexport default function ClassCards({playerClass, cards, classVisibility}) {\n    const [cardVisibility, setCardVisibility] = useState(false)\n    const classCards = cards.filter(card => {\n        return card.playerClass === playerClass;\n    })\n    // if the class has no cards in this expansion then dont render anything\n    if (classCards.length === 0) return (<></>);\n    return (\n        <div\n            className=\"class-cards\"\n            style={{\n                display: classVisibility ? \"flex\" : \"none\",\n            }}>\n            <h2 \n                className=\"player-class-header\"\n                tabIndex=\"1\"\n                onClick={() => setCardVisibility(!cardVisibility)}\n            >{playerClass}</h2>\n            <ul \n                className=\"card-list\"\n            >\n                {classCards.map((card, index) => {\n                    return <Card \n                                card={card} \n                                cardVisibility={cardVisibility} \n                                key={index} \n                            />\n                })}\n            </ul>\n        </div>\n    )\n} \n","import React, {useState} from 'react';\nimport ClassCards from \"./ClassCards\";\n\nexport default function Expansion({expansion}) {\n    const [classVisibility, setClassVisibility] = useState(false)\n    \n    const cardClasses = [\"Neutral\", \"Rogue\", \"Warrior\",\n  \"Hunter\", \"Mage\", \"Paladin\", \"Shaman\",\n  \"Priest\", \"Druid\", \"Warlock\", \"Demon Hunter\"];\n    return (\n        <div className=\"expansion\">\n            <h2 className=\"expansion-header\"\n                tabIndex=\"0\"\n                onClick={() => setClassVisibility(!classVisibility)}>\n                {expansion.name}\n            </h2>\n            <div\n                className=\"class-list\">\n                {cardClasses.map((playerClass, index) => {\n                    return <ClassCards \n                                playerClass={playerClass} \n                                cards={expansion.cards} \n                                classVisibility={classVisibility}\n                                key={index}\n                            />\n                })}\n            </div>\n        </div>\n    )\n}\n","// this is a hook that takes a url and returns data\nimport { useState, useEffect } from \"react\";\n\nfunction useFetch(url) {\n\n    \n    // data varibale\n    const [data, setData] = useState([]);\n    // so we know when we are done loading\n    const [isDone, setIsDone] = useState(false);\n    const getData = async (url) => {\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                },\n            });\n            // converting data into js object\n            const json = await response.json();\n            // convert object into array\n            const array = await convertToArray(json);\n            // filter the array\n            const filteredArray = await filterByExpansion(array);\n            // again by card\n            const filteredTwiceArray = await filterByCard(filteredArray);\n            // set data varibale to converted response\n            console.log(filteredTwiceArray);\n            setData(filteredTwiceArray);\n            // set the isDone varibale to true after getting data\n            setIsDone(true)\n        } catch (err) {\n            console.log(err);   \n        }\n    }\n    // run the async function when component renders\n    useEffect(() => {\n      getData(url)\n    }, [])\n    return [data, isDone];\n}\nconst convertToArray = (data) => {\n    return Object.keys(data).map(expansionName => {\n        return {\n            name: expansionName,\n            cards: data[expansionName],\n        }\n    })\n}\nconst filterByExpansion = (data) => {\n    const expansionMinimum = 50;\n    const invalidExpansions = [\n        \"Hero Skins\",\n        \"Credits\",\n        \"Tavern Brawl\",\n        \"Battlegrounds\",\n    ];\n    // return expnsions thata re long enough and not invalid\n    return data.filter(expansion => {\n        if (expansion.cards.length < expansionMinimum) return false;\n        if (invalidExpansions.includes(expansion.name)) return false;\n        return true\n    })\n}\nconst filterByCard = (data) => {\n    const invalidCardTypes = [\"Hero Power\", \"Hero\", \"Enchantment\"];\n    const invalidCardNames = [\"FX\", \"Cost\", \"NOOOOOOOOOOOO\", \"AFK\", \"Coin's Vengeance\", \"Anomaly\"];\n\n    return data.map(expansion => {\n        return {\n            ...expansion,\n            cards: expansion.cards.filter(card => {\n                if (invalidCardNames.includes(card.name)) return false;\n                if (invalidCardTypes.includes(card.type)) return false;\n                return true;\n            })\n        }\n    })\n}\nexport default useFetch;","import React from 'react';\nimport Expansion from \"./Expansion\";\nimport useFetch from \"../hooks/useFetch\";\n\nexport default function ExpansionList() {\n    \n    // our url\n    const url = \"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards\";\n    const [data, isDone] = useFetch(url)\n    return (\n        <div className=\"expansion-list\">\n            <div \n                style={{ display: isDone ? \"none\" : \"block\", }}\n                className=\"loader\"\n            >\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n            </div>\n            \n            {data.map((expansion, index) => {\n                return <Expansion expansion={expansion} key={index} />\n            })}\n        </div>         \n    )\n}\n","import React from \"react\";\nimport ExpansionList from \"./components/ExpansionList\";\nimport \"./style/style.css\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <h1>Hearthstone Cards</h1>\n      <ExpansionList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}