{"version":3,"sources":["hooks/useCardDescription.js","components/CardDescription.js","components/Card.js","components/ClassCards.js","components/Expansion.js","hooks/useFetchAllExpansions.js","components/ExpansionList.js","hooks/useFetchSearch.js","components/SearchList.js","components/SearchPage.js","App.js","index.js"],"names":["useCardDescription","card","img","className","src","artist","flavor","CardDescription","cardVisibility","descriptionVisibility","properties","style","display","map","property","Card","useState","setDescriptionVisibility","onClick","tabIndex","playerClass","replace","name","ClassCards","cards","classVisibility","setCardVisibility","classCards","filter","length","index","Expansion","expansion","setClassVisibility","convertToArray","data","Object","keys","expansionName","filterByExpansion","invalidExpansions","includes","filterByCard","invalidCardTypes","invalidCardNames","type","useFetchAllExpansions","url","setData","isDone","setIsDone","getData","a","fetch","method","headers","process","response","json","array","filteredArray","filteredTwiceArray","console","log","useEffect","ExpansionList","useFetchSearch","search","searchResponse","setSearchResponse","getSearch","slice","SearchList","SearchPage","setSearch","onChange","e","target","value","placeholder","App","to","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98910e82.chunk.js","sourcesContent":["\nfunction useCardDescription(card) {\n    // const renderHealth = () => {\n    //     if (card.health) {\n    //         return <div className=\"card-property\">Health: {card.health}</div>\n    //     }\n    // } \n    // const renderAttack = () => {\n    //     if (card.attack) {\n    //         return <div className=\"card-property\">Attack: {card.attack}</div>\n    //     }\n    // }  \n    // const renderCost = () => {\n    //     if (card.cost) {\n    //         return <div className=\"card-property\">Cost: {card.cost}</div>\n    //     }\n    // }   \n    // const renderText = () => {\n    //     if (card.text) {\n    //         return <div className=\"card-property\">Text: {card.text}</div>\n    //     }\n    // }   \n    // const renderType = () => {\n    //     if (card.type) {\n    //         return <div className=\"card-property\">Type: {card.type}</div>\n    //     }\n    // }   \n    // const renderRace = () => {\n    //     if (card.race) {\n    //         return <div className=\"card-property\">Race: {card.race}</div>\n    //     }\n    // }   \n    // const renderRarity = () => {\n    //     if (card.rarity) {\n    //         return <div className=\"card-property\">Rarity: {card.rarity}</div>\n    //     }\n    // }   \n    const renderArtist= () => {\n        if (card.artist) {\n            return  <div className=\"card-artist\">Artist: {card.artist}</div>\n        }\n    }   \n    const renderFlavor = () => {\n        if (card.flavor) {\n            return <div className=\"card-flavor\">Flavor: {card.flavor}</div>\n        }\n    }   \n    const renderImage = () => {\n        if (card.img) {\n            return <div className=\"card-image\">\n                        <img src={card.img} />\n                    </div>\n        }\n    }   \n    return [renderImage, renderArtist, renderFlavor]\n}\nexport default useCardDescription;","import React from 'react'\nimport useCardDescription from \"../hooks/useCardDescription\";\n\nexport default function CardDescription({card, cardVisibility, descriptionVisibility}) {\n    const properties = useCardDescription(card)\n    return (\n        <div \n            style={{\n                display: cardVisibility ? \"flex\" : \"none\",\n                display: descriptionVisibility ? \"flex\" : \"none\",\n            }}\n            className=\"card-description\"\n        >\n            {properties.map(property => {\n                return property();\n            })}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport CardDescription from \"./CardDescription\";\n\nexport default function Card({card, cardVisibility}) {\n    const [descriptionVisibility, setDescriptionVisibility] = useState(false);\n    return (\n        <li \n            onClick={() => setDescriptionVisibility(!descriptionVisibility)}\n            tabIndex=\"2\"\n            className={`card ${card?.playerClass.replace(\" \", \"-\")}`} \n            style={{\n                display: cardVisibility ? \"flex\" : \"none\",\n            }}\n        >\n            <h3 \n                className=\"card-name\"\n            >\n                {card.name}\n            </h3>\n            <CardDescription\n                card={card} \n                cardVisibility={cardVisibility} \n                descriptionVisibility={descriptionVisibility}\n            />\n        </li>\n    )\n}\n","import React, { useState } from 'react'\nimport Card from \"./Card\"\n\nexport default function ClassCards({playerClass, cards, classVisibility}) {\n    const [cardVisibility, setCardVisibility] = useState(false)\n    const classCards = cards.filter(card => {\n        return card.playerClass === playerClass;\n    })\n    // if the class has no cards in this expansion then dont render anything\n    if (classCards.length === 0) return (<></>);\n    return (\n        <div\n            className=\"class-cards\"\n            style={{\n                display: classVisibility ? \"flex\" : \"none\",\n            }}>\n            <h2 \n                className=\"player-class-header\"\n                tabIndex=\"1\"\n                onClick={() => setCardVisibility(!cardVisibility)}\n            >{playerClass}</h2>\n            <ul \n                className=\"card-list\"\n            >\n                {classCards.map((card, index) => {\n                    return <Card \n                                card={card} \n                                cardVisibility={cardVisibility} \n                                key={index} \n                            />\n                })}\n            </ul>\n        </div>\n    )\n} \n","import React, {useState} from 'react';\nimport ClassCards from \"./ClassCards\";\n\nexport default function Expansion({expansion}) {\n    const [classVisibility, setClassVisibility] = useState(false)\n    \n    const cardClasses = [\"Neutral\", \"Rogue\", \"Warrior\",\n  \"Hunter\", \"Mage\", \"Paladin\", \"Shaman\",\n  \"Priest\", \"Druid\", \"Warlock\", \"Demon Hunter\"];\n    return (\n        <div className=\"expansion\">\n            <h2 className=\"expansion-header\"\n                tabIndex=\"0\"\n                onClick={() => setClassVisibility(!classVisibility)}>\n                {expansion.name}\n            </h2>\n            <div\n                className=\"class-list\">\n                {cardClasses.map((playerClass, index) => {\n                    return <ClassCards \n                                playerClass={playerClass} \n                                cards={expansion.cards} \n                                classVisibility={classVisibility}\n                                key={index}\n                            />\n                })}\n            </div>\n        </div>\n    )\n}\n","// this is a hook that takes a url and returns data\nimport { useState, useEffect } from \"react\";\n\nfunction useFetchAllExpansions(url) {\n\n    \n    // data varibale\n    const [data, setData] = useState([]);\n    // so we know when we are done loading\n    const [isDone, setIsDone] = useState(false);\n    const getData = async (url) => {\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                },\n            });\n            // converting data into js object\n            const json = await response.json();\n            // convert object into array\n            const array = await convertToArray(json);\n            // filter the array\n            const filteredArray = await filterByExpansion(array);\n            // again by card\n            const filteredTwiceArray = await filterByCard(filteredArray);\n            // set data varibale to converted response\n            console.log(filteredTwiceArray);\n            setData(filteredTwiceArray);\n            // set the isDone varibale to true after getting data\n            setIsDone(true)\n        } catch (err) {\n            console.log(err);   \n        }\n    }\n    // run the async function when component renders\n    useEffect(() => {\n      getData(url)\n    }, [])\n    return [data, isDone];\n}\nconst convertToArray = (data) => {\n    return Object.keys(data).map(expansionName => {\n        return {\n            name: expansionName,\n            cards: data[expansionName],\n        }\n    })\n}\nconst filterByExpansion = (data) => {\n    const expansionMinimum = 50;\n    const invalidExpansions = [\n        \"Hero Skins\",\n        \"Credits\",\n        \"Tavern Brawl\",\n        \"Battlegrounds\",\n    ];\n    // return expnsions thata re long enough and not invalid\n    return data.filter(expansion => {\n        if (expansion.cards.length < expansionMinimum) return false;\n        if (invalidExpansions.includes(expansion.name)) return false;\n        return true\n    })\n}\nconst filterByCard = (data) => {\n    const invalidCardTypes = [\"Hero Power\", \"Hero\", \"Enchantment\"];\n    const invalidCardNames = [\"FX\", \"Cost\", \"NOOOOOOOOOOOO\", \"AFK\", \"Coin's Vengeance\", \"Anomaly\"];\n\n    return data.map(expansion => {\n        return {\n            ...expansion,\n            cards: expansion.cards.filter(card => {\n                if (invalidCardNames.includes(card.name)) return false;\n                if (invalidCardTypes.includes(card.type)) return false;\n                return true;\n            })\n        }\n    })\n}\nexport default useFetchAllExpansions;","import React from 'react';\nimport Expansion from \"./Expansion\";\nimport useFetchAllExpansions from \"../hooks/useFetchAllExpansions\";\n\nexport default function ExpansionList() {\n    \n    // our url\n    const url = \"https://omgvamp-hearthstone-v1.p.rapidapi.com/cards\";\n    const [data, isDone] = useFetchAllExpansions(url)\n    return (\n        <div className=\"expansion-list\">\n            <h1>Hearthstone Cards</h1>\n            <div \n                style={{ display: isDone ? \"none\" : \"block\", }}\n                className=\"loader\"\n            >\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n            </div>\n            \n            {data.map((expansion, index) => {\n                return <Expansion expansion={expansion} key={index} />\n            })}\n        </div>         \n    )\n}\n","import {useState, useEffect} from \"react\";\n\nfunction useFetchSearch(search) {\n    const [searchResponse, setSearchResponse] = useState([])\n    const getSearch = async (search) => {\n        try {\n            if (search.length === 0) return;\n            const response = await fetch(`https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/search/${search}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n                    \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\"\n                }\n            })\n            const data = await response.json();\n            if (data.length > 9) {\n                setSearchResponse(data.slice(0, 10));\n                console.log(data.slice(0, 10));\n                return;\n            }\n            setSearchResponse(data);\n            console.log(data);\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        getSearch(search)\n    }, [search])\n    return searchResponse;\n}\nexport default useFetchSearch;","import React from 'react';\nimport Card from \"./Card\";\n\nexport default function SearchList({cards}) {\n    return (\n        <div>\n            {cards.map((card, index) => {\n                return <Card card={card} cardVisibility={true} key={index} />\n            })}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport useFetchSearch from \"../hooks/useFetchSearch\";\nimport SearchList from \"../components/SearchList\";\n\nexport default function SearchPage() {\n    // our search query\n    const [search, setSearch] = useState(\"\");\n    // our custom hook that returns our response\n    const searchResponse = useFetchSearch(search);\n    return (\n        <div>\n            <form>\n                <label>Search For Cards:</label>\n                <input\n                    type=\"text\"\n                    onChange={e => setSearch(e.target.value)}\n                    placeholder=\"search\"\n                    ></input>\n            </form>\n            <SearchList cards={searchResponse} />\n        </div>\n    )\n}\n","import React from \"react\";\nimport ExpansionList from \"./components/ExpansionList\";\nimport SearchPage from \"./components/SearchPage\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport \"./style/style.css\";\n\nfunction App() {\n  \n  return (\n    <Router>\n      <header>\n        <nav>\n          <Link to=\"/\">\n            All Expansions\n          </Link>\n          <Link to=\"/search-card\">\n            Search Page\n          </Link>\n        </nav>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={ExpansionList}/>\n        <Route path=\"/search-card\" component={SearchPage}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}