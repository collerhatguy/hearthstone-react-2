{"version":3,"sources":["components/Button.js","components/CardImage.js","components/Card.js","components/CardList.js","components/ClassCards.js","components/Expansion.js","components/Loader.js","components/ExpansionList.js","services/index.js","hooks/useFetchSearch.js","components/SearchPage.js","components/ArtistPage.js","hooks/useFetchAllExpansions.js","themes/index.js","App.js","index.js"],"names":["Button","props","text","handleClick","StyledButton","styled","button","theme","hoverEffect","secondColor","primeColor","onClick","e","stopPropagation","StyledCard","div","CardImage","imgGold","img","useToggle","gold","toggleGold","src","alt","li","cardAnimation","Card","card","artist","playerClass","name","flavor","descriptionVisibility","toggleDescriptionVisibility","push","useHistory","tabIndex","className","replace","StyledCardList","ul","CardList","cards","map","index","sequence","cardId","StyledClassList","ClassCards","cardVisibility","toggleCardVisibility","length","StyledExpansion","Expansion","expansion","classVisibility","toggleClassVisibility","filter","uuid","animation","keyframes","StyledLoader","Loader","ExpansionList","data","callApi","axios","create","baseURL","headers","process","useFetchSearch","search","useState","searchResponse","setSearchResponse","getSearch","a","get","slice","console","log","useDebounce","StyledSearch","form","SearchPage","setSearch","type","onChange","target","value","placeholder","StyledList","ArtistPage","useParams","goBack","pictures","setPictures","useEffect","reduce","allPics","artistCards","convertToArray","Object","keys","expansionName","filterByExpansion","invalidExpansions","includes","filterByCard","invalidCardTypes","invalidCardNames","useFetchAllExpansions","setData","getData","array","filteredArray","filteredTwiceArray","spacing","color1","color2","StyledHeader","header","StyledMain","main","App","to","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae6c1ba1.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nexport default function Button(props) {\n    const { text, handleClick = null } = props;\n    const StyledButton = styled.button`\n        ${({ theme }) => theme.hoverEffect(theme.secondColor, theme.primeColor)};\n        font-size: inherit;\n        padding: .5rem 1rem;\n        border: solid 1px ${props => props.theme.primeColor};\n        width: 100%;\n        min-width: min-content;\n        margin: 1rem auto;\n    `\n    return (\n        <StyledButton \n        onClick={e => {\n            e.stopPropagation()\n            handleClick()}\n        }>{ text }</StyledButton>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from './Button'\nimport { useToggle } from 'use-toggle-coolhatguy'\n\nconst StyledCard = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    img {\n        width: 200px;\n    }\n    & > * {\n        margin: 1rem;\n    }\n`\n\nexport default function CardImage(props) {\n    const { imgGold, img } = props;\n    const [gold, toggleGold] = useToggle(false);\n    return (\n        <StyledCard>\n            <img src={gold ? imgGold : img} alt=\"No card here\"/>\n            {\n                imgGold && \n                    <Button \n                        handleClick={toggleGold}\n                        text={gold ? \"Gold\" : \"Normal\"}\n                    />\n            }\n            \n        </StyledCard>\n    )\n}\n","import React from 'react'\nimport { useToggle } from \"use-toggle-coolhatguy\"\nimport { useHistory } from \"react-router-dom\"\nimport CardImage from './CardImage'\nimport Button from './Button'\nimport styled from 'styled-components'\n\nconst StyledCard = styled.li`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    padding: 1rem;\n    margin: 1rem;\n    border: solid 1px ${props => props.theme.primeColor};\n    opacity: 0;\n    animation: ${props => props.theme.cardAnimation} 300ms linear forwards;\n    h4 {\n        font-size: 3rem;\n    }\n    .card-description {\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n    }\n    p {\n        width: 80%;\n        font-weight: 900;\n        margin: 1rem auto;\n    }\n`\n\nexport default function Card(props) {\n    const { card } = props\n    const { artist, playerClass, name, img, imgGold, flavor } = card\n    const [descriptionVisibility, toggleDescriptionVisibility] = useToggle(false)\n    const { push } = useHistory()\n    const handleClick = () => push(`/artist-list/${artist}`)\n    return (\n        <StyledCard \n            tabIndex=\"2\"\n            onClick={toggleDescriptionVisibility}\n            className={playerClass.replace(\" \", \"-\")}>\n            <h4>\n                {name}\n            </h4>\n            {\n                descriptionVisibility && \n                    <div className=\"card-description\">\n                        <CardImage \n                            imgGold={imgGold} \n                            img={img}\n                        />\n                        {\n                            artist && <Button \n                                handleClick={handleClick} \n                                text={artist}\n                            />\n                        }\n                        <p className=\"card-flavor\">\n                            {flavor || \"This card has no flavor text\"}\n                        </p>    \n                    </div>\n            }\n        </StyledCard>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Card from \"./Card\";\n\nconst StyledCardList = styled.ul`\n    margin: 1rem auto;\n    width: 90%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n`\nexport default function CardList(props) {\n    const { cards } = props\n    return (\n        <StyledCardList>\n            {\n                cards.map((card, index) => \n                    <Card\n                        card={card} \n                        sequence={index}\n                        key={card.cardId}  \n                    />\n                )\n            }\n        </StyledCardList>\n    )\n}\n","import React from 'react'\nimport styled from \"styled-components\"\nimport CardList from './CardList'\nimport { useToggle } from 'use-toggle-coolhatguy'\n\nconst StyledClassList = styled.li`\n    width: 100%;\n    margin: 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-direction: column;\n    h3 {\n        font-size: 3rem;\n        padding: .5rem 1rem;\n        border: solid 1px ${props => props.theme.primeColor};\n    }\n`\n\nexport default function ClassCards(props) {\n    const { playerClass, cards } = props\n    const [cardVisibility, toggleCardVisibility] = useToggle(false)\n    \n    if (!cards.length) return null\n    return (\n        <StyledClassList>\n            <h3 \n                tabIndex=\"1\" \n                onClick={toggleCardVisibility}\n                className={playerClass.replace(\" \", \"-\")}\n            >\n                {playerClass}: {cards.length} Cards\n            </h3>\n            {cardVisibility && <CardList cards={cards}/>}\n        </StyledClassList>\n    )\n} \n","import React from 'react'\nimport ClassCards from \"./ClassCards\"\nimport styled from 'styled-components'\nimport Button from './Button'\nimport { v4 as uuid } from \"uuid\"\nimport { useToggle } from 'use-toggle-coolhatguy'\n\nconst StyledExpansion = styled.li`\n    width: 95%;\n    margin: 0 auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    h2 {\n        font-size: 4rem;\n    }\n    ul {\n        min-width: min-content;\n        width: 95%;\n        display: flex;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        flex-direction: row;\n    }\n`;\n\nexport default function Expansion({ expansion }) {\n    const [classVisibility, toggleClassVisibility] = useToggle(false)\n    \n    const cardClasses = [\n        \"Neutral\", \"Rogue\", \"Warrior\",\n        \"Hunter\", \"Mage\", \"Paladin\", \n        \"Shaman\", \"Priest\", \"Druid\", \n        \"Warlock\", \"Demon Hunter\"\n    ];\n    return (\n        <StyledExpansion>\n            <h2 tabIndex=\"0\" >\n                <Button \n                handleClick={toggleClassVisibility} \n                text={expansion.name} />\n            </h2>\n            <ul>\n                {classVisibility && cardClasses.map(playerClass => \n                    <ClassCards \n                        playerClass={playerClass} \n                        cards={expansion.cards.filter(card => \n                            card.playerClass === playerClass\n                        )} \n                        key={uuid()}\n                    />\n                )}\n            </ul>\n        </StyledExpansion>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst animation = keyframes`\n    0% {opacity: 0}\n    50% {opacity: 1}\n    100% {opacity: 0}\n`\nconst StyledLoader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    div {\n        border-radius: 100%;\n        margin: 2rem;\n        width: 30px;\n        height: 30px;\n        background-color: ${props => props.theme.primeColor};\n        animation: ${animation} 1s linear -.9s infinite;\n        &:nth-child(2) {animation-delay: -.6s;}\n        &:nth-child(3) {animation-delay: -.3s;}\n    }\n`\nexport default function Loader() {\n    return (\n        <StyledLoader>\n            <div className=\"loading-dot\"></div>\n            <div className=\"loading-dot\"></div>\n            <div className=\"loading-dot\"></div>\n        </StyledLoader>\n    )\n}\n","import React from 'react';\nimport Expansion from \"./Expansion\";\nimport Loader from \"./Loader\";\n\nexport default function ExpansionList(props) {\n    const { data } = props\n    return (\n        <>\n            <h1>Hearthstone Cards</h1>\n            {\n                data ?  \n                    <ul>\n                        {data.map((expansion, index) => \n                            <Expansion\n                                expansion={expansion} \n                                sequence={index}\n                                key={index} \n                            />\n                        )}\n                    </ul> \n                    :\n                    <Loader/>\n            }\n        </>         \n    )\n}\n","import axios from \"axios\"\n\nconst callApi = () => {\n    return axios.create({\n        baseURL: `https://omgvamp-hearthstone-v1.p.rapidapi.com/cards`,\n        headers: {\n            \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\n            \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n        }\n    })\n} \nexport default callApi","import { useState } from \"react\"\nimport { useDebounce } from \"use-debounce-coolhatguy\"\nimport callApi from \"../services\"\n\nfunction useFetchSearch(search) {\n    const [searchResponse, setSearchResponse] = useState([])\n    const getSearch = async (search) => {\n        try {\n            if (search.length === 0) return\n            const { data } = await callApi().get(`/search/${search}`)\n            if (!data) return searchResponse\n            if (data.length > 9) {\n                return setSearchResponse(data.slice(0, 10))\n            }\n            setSearchResponse(data)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n    useDebounce(() => {\n        getSearch(search)\n    }, 1000, [search])\n    return searchResponse\n}\nexport default useFetchSearch","import React, {useState} from 'react'\nimport useFetchSearch from \"../hooks/useFetchSearch\"\nimport CardList from './CardList'\nimport styled from \"styled-components\"\n\nconst StyledSearch = styled.form`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    & > * {font-size: 4rem;}\n`\n\nexport default function SearchPage() {\n    const [search, setSearch] = useState(\"\")\n    const searchResponse = useFetchSearch(search)\n    const handleChange = e => setSearch(e.target.value)\n    return (\n        <>\n            <StyledSearch>\n                <label>Search For Cards:</label>\n                <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    placeholder=\"search\"\n                    value={search}\n                />\n            </StyledSearch>\n            <CardList \n                cards={searchResponse} \n                cardVisibility={true} \n            />\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {v4 as uuid} from \"uuid\";\nimport styled from 'styled-components';\n\nimport Button from './Button';\nimport CardImage from './CardImage';\nimport Loader from \"./Loader\";\n\nconst StyledList = styled.ul`\n    width: 100%;\n    padding: 1rem;\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n`\n\nexport default function ArtistPage(props) {\n    const { data } = props;\n    const { artist } = useParams();\n    const { goBack } = useHistory();\n    const [pictures, setPictures] = useState()\n    useEffect(() => {\n        setPictures(data?.reduce((allPics, expansion) => {\n            const artistCards = expansion.cards.filter(card => card.artist === artist)\n            return [...allPics, ...artistCards];\n        }, []))\n    }, [artist, data])\n    return (\n        <div className=\"page\">\n            <Button\n                handleClick={goBack}\n                text={\"Back\"}\n            />\n           <h2>All pictures by {artist}: </h2> \n           <StyledList>\n                {pictures ? pictures.map(({ img, imgGold }) => \n                    <li key={uuid()}>\n                        <CardImage img={img} imgGold={imgGold} />\n                    </li>\n                ) : <Loader />}\n           </StyledList>\n        </div>\n    )\n}\n","\nimport { useState, useEffect } from \"react\"\nimport callApi from \"../services\"\n\nfunction useFetchAllExpansions() {\n    const [data, setData] = useState()\n    const getData = async () => {\n        try {\n            const { data } = await callApi().get()\n            const array = convertToArray(data)\n            const filteredArray = filterByExpansion(array)\n            const filteredTwiceArray = filterByCard(filteredArray)\n            setData(filteredTwiceArray)\n        } catch (err) {\n            console.log(err)   \n        }\n    }\n    useEffect(() => {\n      getData()\n    }, [])\n\n    return data\n}\n\nconst convertToArray = data => \n        Object.keys(data).map(expansionName => ({\n            name: expansionName,\n            cards: data[expansionName],\n        })\n    )\n\nconst filterByExpansion = data => {\n    const expansionMinimum = 50\n    const invalidExpansions = [\n        \"Hero Skins\",\n        \"Credits\",\n        \"Tavern Brawl\",\n        \"Battlegrounds\",\n    ]\n\n    return data.filter(expansion => {\n        if (expansion.cards.length < expansionMinimum) return false\n        if (invalidExpansions.includes(expansion.name)) return false\n        return true\n    })\n}\n\nconst filterByCard = data => {\n    const invalidCardTypes = [\n        \"Hero Power\", \n        \"Hero\", \n        \"Enchantment\"\n    ]\n    const invalidCardNames = [\n        \"FX\", \n        \"Cost\", \n        \"NOOOOOOOOOOOO\", \n        \"AFK\", \n        \"Coin's Vengeance\", \n        \"Anomaly\"\n    ]\n\n    return data.map(({ name, cards }) => ({\n            name,\n            cards: cards.filter((card, index) => {\n                const { name, type, flavor } = card\n                if (invalidCardNames.includes(name)) return false\n                if (invalidCardTypes.includes(type)) return false\n                if (!flavor) return false\n                if (cards[index + 1]) {\n                    const nextCard = cards[index + 1]\n                    if (nextCard.name === name) return false\n                }\n                return true\n            })\n        })\n    )\n}\n\nexport default useFetchAllExpansions","import { keyframes } from \"styled-components\"\nexport const theme = {\n    primeColor: \"black\",\n    secondColor: \"white\",\n    spacing: \"padding: 1rem;\",\n    hoverEffect: (color1, color2) => {\n        return `\n        cursor: pointer;\n        transition-duration: 300ms;\n        background-color: ${color1};\n        color: ${color2};\n        &:hover {\n            color: ${color1};\n            background-color: ${color2};\n        }\n        &:focus {\n            outline: none;\n            color: ${color1};\n            background-color: ${color2};\n        }`\n    },\n    cardAnimation: keyframes`\n        from {opacity: 0}\n        to {opacity: 1}\n    `,\n}","import ExpansionList from \"./components/ExpansionList\";\nimport SearchPage from \"./components/SearchPage\";\nimport ArtistPage from \"./components/ArtistPage\";\n\nimport React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport useFetchAllExpansions from \"./hooks/useFetchAllExpansions\";\n\nimport \"./style/style.css\";\nimport { theme } from \"./themes\";\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  position: fixed;\n  top: 0px;\n  background-color: ${props => props.theme.primeColor};\n  z-index: 1;\n  nav {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n  a {\n    ${({ theme }) => theme.hoverEffect(theme.primeColor, theme.secondColor)};\n    ${props => props.theme.spacing}\n    font-size: 2rem;\n    background-color: ${props => props.theme.primeColor};\n    color: ${props => props.theme.secondColor};\n    text-decoration: none;\n  }\n`\nconst StyledMain = styled.main`\n  color: ${props => props.theme.primeColor};\n  background-color: ${props => props.theme.secondColor};\n  margin-top: 80px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  h1 {font-size: 6rem;}\n`\n\nfunction App() {\n  const data = useFetchAllExpansions();\n  return (\n    <ThemeProvider theme={theme}>\n        <StyledHeader>\n          <nav>\n            <Link to=\"/\">\n              All Expansions\n            </Link>\n            <Link to=\"/search-card\">\n              Search Page\n            </Link>\n          </nav>\n        </StyledHeader>\n        <StyledMain>\n          <Switch>\n            <Route path=\"/\" exact>\n              <ExpansionList data={data}/>\n            </Route>\n            <Route path=\"/search-card\" component={SearchPage}/>\n            <Route path=\"/artist-list/:artist\">\n              <ArtistPage data={data}/>\n            </Route>\n          </Switch>\n        </StyledMain>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}